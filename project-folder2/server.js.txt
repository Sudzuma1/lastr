const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;

// ✅ Разрешаем CORS
app.use(cors());

// ✅ Увеличиваем лимиты body-parser (до 10MB)
app.use(bodyParser.json({ limit: '10mb' }));
app.use(bodyParser.urlencoded({ limit: '10mb', extended: true }));

// ✅ Раздаём статические файлы (HTML, CSS, JS)
app.use(express.static('public'));

// ✅ Файл для хранения объявлений
const adsFile = 'ads.json';

// ✅ Загружаем объявления из файла при старте
let ads = [];
if (fs.existsSync(adsFile)) {
    ads = JSON.parse(fs.readFileSync(adsFile, 'utf-8'));
}

// ✅ Получить все объявления
app.get('/ads', (req, res) => {
    res.json(ads);
});

// ✅ Добавить объявление
app.post('/ads', (req, res) => {
    const { title, photo, description, isPremium } = req.body;
    if (!title || !photo || !description) {
        return res.status(400).json({ message: 'Все поля обязательны' });
    }

    const newAd = { id: Date.now(), title, photo, description, isPremium };
    ads.push(newAd);

    // ✅ Сохраняем в JSON-файл
    fs.writeFileSync(adsFile, JSON.stringify(ads, null, 2));

    res.json(newAd);
});

// ✅ Удалить объявление
app.delete('/ads/:id', (req, res) => {
    const id = parseInt(req.params.id);
    ads = ads.filter(ad => ad.id !== id);

    // ✅ Обновляем JSON-файл
    fs.writeFileSync(adsFile, JSON.stringify(ads, null, 2));

    res.json({ message: 'Объявление удалено' });
});

// ✅ Перенаправление на `index.html`, если URL не найден
app.get('*', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// ✅ Запуск сервера
app.listen(PORT, () => {
    console.log(`Сервер запущен на порту ${PORT}...`);
});
